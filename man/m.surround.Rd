% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/m.surround.R
\name{m.surround}
\alias{m.surround}
\title{A function to generate m-surroundings}
\usage{
m.surround(x, m, r = 1, distance = "Euclidean", control = list())
}
\arguments{
\item{x}{input sf object with points/multipolygons geometry or matrix
of spatial coordinates}

\item{m}{dimension of m-surrounding}

\item{r}{maximum overlapping between any two m-surroundings.}

\item{distance}{character. For Cartesian coordinates only: one of Euclidean,
Hausdorff or Frechet; for geodetic coordinates, Great Circle distances are
computed.}

\item{control}{optional. Parameters for pruning m-surroundings with the aim of
remove m-surroundings whose elements are too far.}
}
\value{
A list of class \code{list} and \code{m_surr} containing the following components:\cr
\tabular{ll}{
\code{ms} \tab a matrix. Each row is a m-surrounding.\cr
\code{R} \tab total number of observations.\cr
\code{mdtms} \tab xxxxxxxxxxxxxxxxxxx.\cr
\code{mscbl} \tab xxxxxxxxxxxxxxxxxxx.\cr
\code{rowexcl} \tab xxxxxxxxxxxxxxxxxxx.\cr
\code{N} \tab total number of symbolized observations.\cr
\code{m} \tab length of the m-surroundings.\cr
\code{r} \tab overlapping degree.\cr
\code{initobs} \tab element to star the generation of m-surroundings. default initobs=1.\cr
\code{distance} \tab distance select to prune the m-surroundings.\cr
\code{m} \tab length of the m-surroundings.\cr
\code{x} \tab the input "x" as sf-object.\cr
}
}
\description{
This function obtains the m-surroundings by selecting the m-1 nearest neighbors
of each observation, allowing for a degree of overlap of r.
}
\details{
Aquí Antonio escribe una linda historia ...
}
\section{Control arguments}{

\describe{
\item{distance}{character to select the type of distance.
Default = "Euclidean" for Cartesian coordinates only: one of Euclidean,
Hausdorff or Frechet; for geodetic coordinates,
great circle distances are computed (see sf::st_distance())}
\item{dtmaxabs}{xxxxxxxxxxxxxxxxxxxxxxxxxxxx}
\item{dtmaxpc}{xxxxxxxxxxxxxxxxxxxxxxxxxxxx}
\item{dtmaxknn}{Elimina m-surrounding donde alguno de los elementos no está entre los knn más próximos}
}
}

\examples{

Example 1: Obtain m-surroundings with degree of overlapping r
rm(list = ls())
N <- 100
cx <- runif(N)
cy <- runif(N)
x <- cbind(cx,cy)
m = 3
r = 1
msurr_points <- m.surround(x = x, m = m, r = r)
plot(msurr_points, type = 1)
plot(msurr_points, type = 2)
summary(msurr_points)
msurr_points <- m.surround(x = x, m = m, r = r,control = list(dtmaxpc = 0.1))
plot(msurr_points, type = 1)
plot(msurr_points, type = 2)
summary(msurr_points)
msurr_points <- m.surround(x = x, m = m, r = r,control = list(dtmaxknn = 20))
plot(msurr_points, type = 1)
plot(msurr_points, type = 2)
summary(msurr_points)

Example 2:
rm(list = ls())
data("FastFood")
m = 3
r = 1
msurr_points <- m.surround(x = FastFood.sf, m = m, r = r, distance = "Euclidean", control = list(dtmaxpc = .1))
plot(msurr_points, type = 1)
plot(msurr_points, type = 2)
print(msurr_points)
summary(msurr_points)
msurr_points <- m.surround(x = FastFood.sf, m = m, r = r, distance = "Euclidean", control = list(dtmaxknn = 20))
plot(msurr_points, type = 1)
plot(msurr_points, type = 2)
summary(msurr_points)

Example 3: With isolated areas
rm(list = ls())
data(Spain)
plot(sf::st_geometry(spain.sf))
m = 3
r = 1
msurr_points <- m.surround(x = spain.sf, m = m, r = r, distance = "Euclidean", control = list(dtmaxknn = 8))
plot(msurr_points, type = 1)
plot(msurr_points, type = 2)

Example 4: Examples with multipolygons
rm(list = ls())
fname <- system.file("shape/nc.shp", package="sf")
nc <- st_read(fname)
plot(sf::st_geometry(nc))
m = 3
r = 1
msurr_polygonsf <- m.surround(x = nc, m = m, r = r,distance = "Great Circle", control=list(dtmaxpc = 0.20))
plot(msurr_polygonsf, type = 1)
plot(msurr_polygonsf, type = 2)

Example 5: With regular lattice
rm(list = ls())
sfc = st_sfc(st_polygon(list(rbind(c(0,0), c(1,0), c(1,1), c(0,1), c(0,0)))))
hexs <- st_make_grid(sfc, cellsize = 0.1, square = FALSE)
hexs.sf <- st_sf(hexs)
listw  <- poly2nb(as(hexs.sf, "Spatial"), queen = FALSE)
m = 3
r = 1
msurr_polygonsf <- m.surround(x = hexs.sf, m = m, r = r)
plot(msurr_polygonsf, type = 1)
plot(msurr_polygonsf, type = 2)
summary(msurr_polygonsf)
}
\references{
\itemize{
\item Ruiz M, López FA, A Páez. (2010). \emph{Testing for spatial association of qualitative
data using symbolic dynamics}. Journal of Geographical Systems. 12 (3) 281-309
}
}
\author{
\tabular{ll}{
Fernando López  \tab \email{fernando.lopez@upct.es} \cr
Román Mínguez  \tab \email{roman.minguez@uclm.es} \cr
Antonio Páez \tab \email{paezha@gmail.com} \cr
Manuel Ruiz \tab \email{manuel.ruiz@upct.es} \cr
}
}
\keyword{m-history}
\keyword{m-surrounding,}
